{"version":3,"sources":["components/header/sw-logo.png","services/swapi-service.js","components/header/header.js","components/portal/portal.js","components/portal/portal-view.js","components/detail/detail.js","components/spinner/spinner.js","components/film-details/film-details.js","components/film-list/film-list.js","components/search/search.js","components/app/app.js","index.js"],"names":["module","exports","SwapiService","_url","getAllFilms","a","getSource","films","results","anAsyncFunction","item","substring","length","res","getAllQuery","list","Promise","all","map","urlRoute","fetch","this","mode","promise","ok","Error","status","json","body","url","match","Header","className","src","logo","alt","Portal","props","containerEl","document","createElement","classList","add","externalWindow","window","open","appendChild","style","styleText","createTextNode","bootWatchStyle","setAttribute","head","close","ReactDOM","createPortal","children","React","Component","PortalView","detail","closeWindowPortal","Object","keys","k","i","propName","replace","key","type","onClick","Detail","detailName","getStatusDetail","id","getId","imageSrc","useState","portalOpen","setPortalState","href","event","preventDefault","name","Spinner","FilmDetails","film","toggleDetails","swapiService","titlesProps","filmProps","setFilmsProps","detailStatus","setDetailStatus","useEffect","obj","filmDetails","index","episode_id","ViewFilm","showDetails","setShowDetails","details","title","FilmList","visibleFilms","Search","setSearchQuery","searchQuery","query","setQuery","placeholder","value","onChange","target","trim","App","state","filmList","isSort","setState","sort","prevState","then","prevProps","filteredFilms","filter","toLocaleLowerCase","includes","b","localeCompare","render","getElementById"],"mappings":"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","file":"static/js/main.5282df1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-logo.ec952e95.png\";","class SwapiService {\r\n\r\n    _url= 'https://swapi.co/api';\r\n\r\n    async getSource (urlRoute){\r\n        const promise = await fetch(`${this._url}${urlRoute}` , {\r\n            mode: \"cors\"\r\n        });\r\n\r\n        if(!promise.ok){\r\n            throw new Error(`Could not fetch ${urlRoute}, received ${promise.status}`)\r\n        }\r\n\r\n        const body = await promise.json();\r\n        return body\r\n    }\r\n\r\n    getId(item){\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        const res =  item.url.match(idRegExp)[1];\r\n        return res;\r\n    };\r\n\r\n    getAllFilms = async () => {\r\n        const films = await this.getSource('/films/');\r\n        return films.results;\r\n    };\r\n\r\n\r\n    anAsyncFunction = async item => {\r\n        item = item.substring(this._url.length, item.length);\r\n        const res = await this.getSource(item);\r\n        return res;\r\n    };\r\n\r\n    getAllQuery = async (list) => {\r\n        return Promise.all(list.map(item => this.anAsyncFunction(item)))\r\n    };\r\n}\r\n\r\nexport default SwapiService;","import React from 'react';\r\nimport logo from './sw-logo.png';\r\n\r\nconst Header = ()=>{\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <img className=\"logo\" src={logo} alt=\"\"/>\r\n\r\n        </header>\r\n    )\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {bootWatchStyle, portalStyle} from './bootwatch-darky'\r\n\r\nclass Portal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.containerEl = document.createElement('div');\r\n        this.containerEl.classList.add('portal');\r\n        this.externalWindow = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.externalWindow = window.open('', '', 'width=362,height=362,left=200,top=200');\r\n        this.externalWindow.document.body.appendChild(this.containerEl);\r\n        const style = document.createElement('style');\r\n        const styleText = document.createTextNode(bootWatchStyle+portalStyle);\r\n        style.setAttribute('rel','stylesheet');\r\n        style.appendChild(styleText);\r\n        this.externalWindow.document.head.appendChild(style);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.externalWindow.close();\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.containerEl);\r\n    }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport './portal-view.css'\r\n\r\nconst PortalView = ({detail, closeWindowPortal}) => {\r\n\r\n    const list = Object.keys(detail).map((k, i)=>{\r\n        if(typeof detail[k] === 'object'|| k==='name'){\r\n            return;\r\n        }\r\n        const propName = k.replace(/_/gi,' ');\r\n\r\n        return <li\r\n            key={i}\r\n            className=\"list-group-item-secondary\"\r\n        >\r\n            <span className=\"prop-name\">{propName}</span>\r\n            {`: ${detail[k]}`}\r\n        </li>\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {list}\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={closeWindowPortal}\r\n            >\r\n                Close\r\n            </button>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default PortalView;","import React, {useState} from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Portal from '../portal/portal';\r\nimport PortalView from '../portal/portal-view';\r\n\r\nimport './detail.css'\r\n\r\nconst Detail =({detail, detailName, getStatusDetail})=>{\r\n\r\n        const swapiService = new SwapiService();\r\n        const id = swapiService.getId(detail);\r\n        const imageSrc = `https://starwars-visualguide.com/assets/img/${detailName}/${id}.jpg`;\r\n        const [portalOpen, setPortalState] = useState(false);\r\n\r\n    const togglePortal = event => {\r\n        setPortalState(!portalOpen);\r\n        event.preventDefault();\r\n    };\r\n\r\n    const closeWindowPortal = () => {\r\n        setPortalState(false);\r\n    };\r\n\r\n    getStatusDetail(portalOpen);\r\n\r\n        return (\r\n            <li\r\n                className=\"list-group-item\"\r\n            >\r\n                <div id=\"portal\">\r\n                </div>\r\n\r\n                <div className=\"hero\">\r\n                    <img src={imageSrc} alt=\"\"/>\r\n                </div>\r\n\r\n                <a href={detail}\r\n                   onClick={togglePortal}\r\n                >\r\n                        <span>\r\n                            {detail.name}\r\n                        </span>\r\n                </a>\r\n\r\n                {portalOpen && (\r\n                    <Portal>\r\n                        <span>{detail.name}\r\n                        </span>\r\n                        <PortalView\r\n                            detail={detail}\r\n                            closeWindowPortal={closeWindowPortal}\r\n                        />\r\n                    </Portal>\r\n        )}\r\n            </li>\r\n    )\r\n\r\n};\r\n\r\nexport default Detail;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"loadingio-spinner-double-ring-q85b3h4fg4p\">\r\n                <div className=\"ldio-2r49py3qnqb\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Spinner;\r\n","import React, {useState,useEffect} from 'react';\r\nimport Detail from '../detail/detail'\r\nimport Spinner from '../spinner/spinner'\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nimport './film-details.css'\r\n\r\nconst FilmDetails = ({film, toggleDetails})=>{\r\n\r\n    const swapiService = new SwapiService();\r\n    const titlesProps = Object.keys(film);\r\n    const [filmProps, setFilmsProps] = useState(null);\r\n    const [detailStatus, setDetailStatus] = useState(null);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        async function fetch() {\r\n            const obj = {};\r\n            for (let k in film) {\r\n                if (typeof film[k] === 'object') {\r\n                    const res = await swapiService.getAllQuery(film[k]);\r\n                    obj[k] = res;\r\n                }\r\n            }\r\n            setFilmsProps(obj);\r\n        }\r\n        fetch();\r\n    },[detailStatus]);\r\n\r\n    const getStatusDetail = (status)=> {\r\n        setDetailStatus(status);\r\n    };\r\n\r\n    const filmDetails = filmProps?titlesProps.map((detail, index)=> {\r\n\r\n                if (typeof film[detail] === 'object') {\r\n                    return  <ul className=\"list-group\"\r\n                                key={index}\r\n                    >\r\n                        {detail}\r\n                        {film[detail].map((item, i) =>\r\n                            <Detail\r\n                                key={i}\r\n                                detail={filmProps[detail][i]}\r\n                                detailName={detail}\r\n                                getStatusDetail={getStatusDetail}\r\n                            />)\r\n                        }\r\n                    </ul>\r\n\r\n                }\r\n                return<li className=\"list-group-item\"\r\n                          key={index}\r\n                >\r\n                    {detail}\r\n                    <p>\r\n                        {film[detail]}\r\n                    </p>\r\n                </li>\r\n            }):\r\n        <Spinner/>;\r\n\r\n\r\n    return (\r\n        <div className=\"film-details\">\r\n\r\n            <div className=\"card text-white bg-secondary mb-3\" >\r\n                <div className=\"card-header\">\r\n                    <button type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={toggleDetails}\r\n                    >\r\n                        Hide Details\r\n                    </button>\r\n                </div>\r\n\r\n                <img src={`./img/ep-${film.episode_id}.jpg`} className=\"poster\" />\r\n\r\n                <div className=\"card-body\">\r\n\r\n                    <ul className=\"list-group\">\r\n                        {filmDetails}\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FilmDetails;","import React, {Fragment, useState} from 'react';\r\nimport FilmDetails from '../film-details/film-details'\r\nimport Spinner from '../spinner/spinner'\r\n\r\nconst FilmList = ({visibleFilms})=>{\r\n\r\n    const list = visibleFilms ? visibleFilms.map(film=>\r\n        <ViewFilm\r\n            key={film.episode_id}\r\n            film={film}\r\n        />\r\n    ): <Spinner/>;\r\n\r\n\r\n    return (\r\n        <div className=\"film-list\">\r\n\r\n            <ul className=\"list-group\">\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ViewFilm =({film})=>{\r\n\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    const toggleDetails = () => {\r\n        setShowDetails(!showDetails)\r\n    };\r\n\r\n    const details = showDetails?\r\n\r\n        <FilmDetails\r\n            film={film}\r\n            toggleDetails={toggleDetails}\r\n        />\r\n        :<Fragment>\r\n                <span>\r\n                    {film.title}\r\n                </span>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-warning btn-sm\"\r\n                onClick={toggleDetails}\r\n            >\r\n                Show Details\r\n            </button>\r\n        </Fragment>;\r\n\r\n\r\n    return (\r\n        <li className =\"list-group-item\r\n                        d-flex\r\n                        justify-content-between\r\n                        align-items-center\"\r\n        >\r\n            {details}\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default FilmList;","import React, {useState} from 'react';\r\nimport './search.css'\r\n\r\nconst Search = ({setSearchQuery, searchQuery}) => {\r\n\r\n    const [query, setQuery] = useState(searchQuery);\r\n\r\n    const setNewQuery = (event) => {\r\n        const query = event.target.value;\r\n        setQuery(query);\r\n    };\r\n\r\n    const sendQuery = (event) => {\r\n        event.preventDefault();\r\n        setSearchQuery(query.trim());\r\n    };\r\n\r\n    return (\r\n        <div className=\"search\">\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={query}\r\n                            onChange={setNewQuery}\r\n                        />\r\n                            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\"\r\n                                    onClick={sendQuery}\r\n                            >Search</button>\r\n                    </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Header from '../header/header';\r\nimport FilmList from '../film-list/film-list';\r\nimport Search from '../search/search';\r\nimport './app.css';\r\n\r\nclass App extends React.Component{\r\n\r\n      swapiService = new SwapiService();\r\n\r\n      state = {\r\n          searchQuery: '',\r\n          filmList: null,\r\n          visibleFilms: null,\r\n          isSort: false\r\n      };\r\n\r\n  setSearchQuery = (searchQuery) => {\r\n      this.setState({searchQuery});\r\n  };\r\n\r\n  sort = () => {\r\n      this.setState(prevState=>({isSort: !prevState.isSort}));\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.swapiService.getAllFilms()\r\n          .then(filmList=>\r\n              this.setState({\r\n                  filmList,\r\n                  visibleFilms: filmList\r\n              })\r\n          );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n      const {searchQuery, filmList, isSort} = this.state;\r\n\r\n      if(prevState.searchQuery !== searchQuery || prevState.isSort !== isSort) {\r\n\r\n          const filteredFilms = filmList.filter(film=>film.title.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase()));\r\n          if(isSort) {\r\n              const visibleFilms = [...filteredFilms].sort((a, b)=>a.title.localeCompare(b.title));\r\n              this.setState({visibleFilms})\r\n          }\r\n          if(!isSort) {\r\n              const visibleFilms = [...filteredFilms].sort((a, b)=>b.title.localeCompare(a.title));\r\n              this.setState({visibleFilms})\r\n          }\r\n      }\r\n  }\r\n\r\n  render(){\r\n      const {visibleFilms, searchQuery} = this.state;\r\n\r\n      return (\r\n          <div className=\"App\">\r\n              <Header/>\r\n\r\n              <Search\r\n                  setSearchQuery={this.setSearchQuery}\r\n                  searchQuery={searchQuery}\r\n              />\r\n              <div className=\"sort\">\r\n                  <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={this.sort}\r\n                  >\r\n                      Sort by title\r\n                  </button>\r\n              </div>\r\n              <FilmList visibleFilms={visibleFilms}/>\r\n          </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}