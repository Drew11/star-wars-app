{"version":3,"sources":["components/header/sw-logo.png","services/swapi-service.js","components/header/header.js","components/detail/detail.js","components/spinner/spinner.js","components/film-details/film-details.js","components/film-list/film-list.js","components/search/search.js","components/app/app.js","index.js"],"names":["module","exports","SwapiService","_url","getAllFilms","a","getSource","films","results","anAsyncFunction","item","substring","length","res","getAllQuery","list","Array","isArray","Promise","all","map","urlRoute","fetch","this","mode","promise","ok","Error","status","json","body","url","match","Header","className","src","logo","alt","Detail","detail","detailName","getStatusDetail","id","getId","imageSrc","useState","portalOpen","setPortalState","episode_id","href","onClick","event","preventDefault","title","name","Spinner","FilmDetails","film","toggleDetails","posterSrc","swapiService","filmProps","setFilmsProps","titlesProps","setTitlesProps","currentDetail","setDetail","coverSrc","setCover","obj","k","alert","Object","keys","hasOwnProperty","useEffect","catch","error","console","log","filmDetails","index","key","i","type","ViewFilm","showDetails","setShowDetails","details","FilmList","visibleFilms","Search","setSearchQuery","searchQuery","query","setQuery","placeholder","value","onChange","target","trim","App","state","filmList","isSort","setState","sort","prevState","then","prevProps","filteredFilms","filter","toLocaleLowerCase","includes","b","localeCompare","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f77e20d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-logo.ec952e95.png\";","class SwapiService {\r\n\r\n    _url= 'https://swapi.co/api';\r\n\r\n    async getSource (urlRoute){\r\n        const promise = await fetch(`${this._url}${urlRoute}` , {\r\n            mode: \"cors\"\r\n        });\r\n\r\n        if(!promise.ok){\r\n            throw new Error(`Could not fetch ${urlRoute}, received ${promise.status}`)\r\n        }\r\n\r\n        const body = await promise.json();\r\n        return body\r\n    }\r\n\r\n    getId(item){\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        const res =  item.url.match(idRegExp)[1];\r\n        return res;\r\n    };\r\n\r\n    getAllFilms = async () => {\r\n        const films = await this.getSource('/films/');\r\n        return films.results;\r\n    };\r\n\r\n    anAsyncFunction = async item => {\r\n        item = item.substring(this._url.length, item.length);\r\n        const res = await this.getSource(item);\r\n        return res;\r\n    };\r\n\r\n    getAllQuery = async (list) => {\r\n        if (Array.isArray(list)){\r\n            return Promise.all(list.map(item => this.anAsyncFunction(item)))\r\n        }\r\n        return this.anAsyncFunction(list)\r\n    };\r\n}\r\n\r\nexport default SwapiService;","import React from 'react';\r\nimport logo from './sw-logo.png';\r\nimport './header.css'\r\nconst Header = ()=>{\r\n\r\n    return (\r\n        <div className=\"header\">\r\n                    <img className=\"logo\"src={logo} alt=\"\"/>\r\n        </div>\r\n    )\r\n};\r\nexport default Header;\r\n","import React, {useState} from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nimport './detail.css'\r\n\r\nconst Detail = ({detail, detailName, getStatusDetail}) => {\r\n\r\n    if ( (detailName === 'people') || (detailName === 'pilots') || (detailName==='residents') ) {\r\n        detailName='characters'\r\n    }\r\n\r\n    if(detailName === 'homeworld' ){\r\n        detailName='planets'\r\n    }\r\n\r\n    const swapiService = new SwapiService();\r\n    const id = swapiService.getId(detail);\r\n    const imageSrc = `https://starwars-visualguide.com/assets/img/${detailName}/${id}.jpg`;\r\n    const [portalOpen, setPortalState] = useState(false);\r\n\r\n    const togglePortal = event => {\r\n        setPortalState(!portalOpen);\r\n        event.preventDefault();\r\n    };\r\n\r\n    if(portalOpen) {\r\n        getStatusDetail({detail, imageSrc});\r\n    }\r\n        return (\r\n            <li\r\n                className=\"list-group-item\"\r\n            >\r\n\r\n                <div className=\"hero\">\r\n                    <img src={detailName ==='films'?`./img/ep-${detail.episode_id}.jpg`: imageSrc} alt=\"\"/>\r\n                </div>\r\n\r\n                <a href={detail}\r\n                   onClick={togglePortal}\r\n                >\r\n                        <span>\r\n                            {detailName === 'films'? detail.title: detail.name}\r\n                        </span>\r\n                </a>\r\n            </li>\r\n    )\r\n\r\n};\r\n\r\nexport default Detail;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"loadingio-spinner-double-ring-q85b3h4fg4p\">\r\n                <div className=\"ldio-2r49py3qnqb\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Spinner;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Detail from '../detail/detail'\r\nimport Spinner from '../spinner/spinner'\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nimport './film-details.css'\r\n\r\nconst FilmDetails = ({film, toggleDetails, posterSrc })=>{\r\n\r\n    const swapiService = new SwapiService();\r\n    const [filmProps, setFilmsProps] = useState(null);\r\n    const [titlesProps, setTitlesProps] = useState(null);\r\n    const [currentDetail, setDetail] = useState(null);\r\n    const [coverSrc, setCover] = useState(null);\r\n\r\n    const fetch = async () => {\r\n        const obj = {};\r\n        for (let k in film) {\r\n\r\n            if (Array.isArray(film[k])) {\r\n                try {\r\n                    const res = await swapiService.getAllQuery(film[k]);\r\n                    obj[k]=res;\r\n                } catch(err) {\r\n                    alert(err);\r\n                }\r\n            }\r\n\r\n            if ( k === 'homeworld' ) {\r\n                if(film[k]===null){\r\n                    continue;\r\n                }else {\r\n                    const res = await swapiService.getAllQuery(film[k]);\r\n                    obj[k] = res;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        setFilmsProps(obj);\r\n        setTitlesProps(Object.keys(film));\r\n\r\n        if(film.hasOwnProperty('episode_id')) {\r\n            setCover(`./img/ep-${film.episode_id}.jpg`);\r\n        } else {\r\n            setCover(posterSrc);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetch()\r\n            .catch((error)=>console.log(error))\r\n    },[]);\r\n\r\n    const getStatusDetail = ({detail, imageSrc}) => {\r\n        setDetail(detail);\r\n        setCover(imageSrc);\r\n    };\r\n\r\n    const filmDetails = titlesProps?titlesProps.map((detail, index)=> {\r\n\r\n                if (film[detail]===null) {\r\n                    return;\r\n                }\r\n\r\n                if (detail === 'homeworld') {\r\n                    return <Detail\r\n                        key={index}\r\n                        detail={filmProps[detail]}\r\n                        detailName={detail}\r\n                        getStatusDetail={getStatusDetail}\r\n                        posterSrc={posterSrc}\r\n                    />\r\n                }\r\n\r\n                if (Array.isArray(film[detail]) && film[detail].length) {\r\n                    return  <ul className=\"list-group\"\r\n                                key={index}\r\n                    >\r\n                        {detail}\r\n                        {film[detail].map((item, i) =>\r\n                            <Detail\r\n                                key={i}\r\n                                detail={filmProps[detail][i]}\r\n                                detailName={detail}\r\n                                getStatusDetail={getStatusDetail}\r\n                                posterSrc={posterSrc}\r\n                            />)\r\n                        }\r\n                    </ul>\r\n                }\r\n\r\n                return <li className=\"list-group-item\"\r\n                          key={index}>\r\n                            {detail}\r\n                            <p>\r\n                                {film[detail]}\r\n                            </p>\r\n                       </li>\r\n            }):\r\n    <Spinner/>;\r\n\r\n    return (\r\n        currentDetail?<FilmDetails\r\n            film={currentDetail}\r\n            toggleDetails={toggleDetails}\r\n            posterSrc={coverSrc}\r\n        /> : <div className=\"film-details\">\r\n\r\n            <div className=\"card text-white bg-secondary mb-3\" >\r\n                <div className=\"card-header\">\r\n                    <button type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={toggleDetails}\r\n                    >\r\n                        Hide Details\r\n                    </button>\r\n                </div>\r\n\r\n                <img src={coverSrc} className=\"poster\" />\r\n\r\n                <div className=\"card-body\">\r\n\r\n                    <ul className=\"list-group\">\r\n                        {filmDetails}\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FilmDetails;","import React, {Fragment, useState} from 'react';\r\nimport FilmDetails from '../film-details/film-details'\r\nimport Spinner from '../spinner/spinner'\r\n\r\nconst FilmList = ({visibleFilms})=>{\r\n\r\n    const list = visibleFilms ? visibleFilms.map(film=>\r\n        <ViewFilm\r\n            key={film.episode_id}\r\n            film={film}\r\n        />\r\n    ): <Spinner/>;\r\n\r\n\r\n    return (\r\n        <div className=\"film-list\">\r\n\r\n            <ul className=\"list-group\">\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ViewFilm =({film})=>{\r\n\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    const toggleDetails = () => {\r\n        setShowDetails(!showDetails)\r\n    };\r\n\r\n    const details = showDetails?\r\n\r\n        <FilmDetails\r\n            film={film}\r\n            toggleDetails={toggleDetails}\r\n        />\r\n        :<Fragment>\r\n                <span>\r\n                    {film.title}\r\n                </span>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-warning btn-sm\"\r\n                onClick={toggleDetails}\r\n            >\r\n                Show Details\r\n            </button>\r\n        </Fragment>;\r\n\r\n\r\n    return (\r\n        <li className =\"list-group-item\r\n                        d-flex\r\n                        justify-content-between\r\n                        align-items-center\"\r\n        >\r\n            {details}\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default FilmList;","import React, {useState} from 'react';\r\nimport './search.css'\r\n\r\nconst Search = ({setSearchQuery, searchQuery}) => {\r\n\r\n    const [query, setQuery] = useState(searchQuery);\r\n\r\n    const setNewQuery = (event) => {\r\n        const query = event.target.value;\r\n        setQuery(query);\r\n    };\r\n\r\n    const sendQuery = (event) => {\r\n        event.preventDefault();\r\n        setSearchQuery(query.trim());\r\n    };\r\n\r\n    return (\r\n        <div className=\"search\">\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={query}\r\n                            onChange={setNewQuery}\r\n                        />\r\n                            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\"\r\n                                    onClick={sendQuery}\r\n                            >Search</button>\r\n                    </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Header from '../header/header';\r\nimport FilmList from '../film-list/film-list';\r\nimport Search from '../search/search';\r\nimport './app.css';\r\n\r\nclass App extends React.Component{\r\n\r\n      swapiService = new SwapiService();\r\n\r\n      state = {\r\n          searchQuery: '',\r\n          filmList: null,\r\n          visibleFilms: null,\r\n          isSort: false\r\n      };\r\n\r\n  setSearchQuery = (searchQuery) => {\r\n      this.setState({searchQuery});\r\n  };\r\n\r\n  sort = () => {\r\n      this.setState(prevState=>({isSort: !prevState.isSort}));\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.swapiService.getAllFilms()\r\n          .then(filmList=>\r\n              this.setState({\r\n                  filmList,\r\n                  visibleFilms: filmList\r\n              })\r\n          );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n      const {searchQuery, filmList, isSort} = this.state;\r\n\r\n      if(prevState.searchQuery !== searchQuery || prevState.isSort !== isSort) {\r\n\r\n          const filteredFilms = filmList.filter(film=>film.title.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase()));\r\n          if(isSort) {\r\n              const visibleFilms = [...filteredFilms].sort((a, b)=>a.title.localeCompare(b.title));\r\n              this.setState({visibleFilms})\r\n          }\r\n          if(!isSort) {\r\n              const visibleFilms = [...filteredFilms].sort((a, b)=>b.title.localeCompare(a.title));\r\n              this.setState({visibleFilms})\r\n          }\r\n      }\r\n  }\r\n\r\n\r\n  render(){\r\n      const {visibleFilms, searchQuery} = this.state;\r\n\r\n      return (\r\n          <div className=\"App\">\r\n              <Header/>\r\n\r\n              <Search\r\n                  setSearchQuery={this.setSearchQuery}\r\n                  searchQuery={searchQuery}\r\n              />\r\n              <div className=\"sort\">\r\n                  <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={this.sort}\r\n                  >\r\n                      Sort by title\r\n                  </button>\r\n              </div>\r\n              <FilmList visibleFilms={visibleFilms}/>\r\n          </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}