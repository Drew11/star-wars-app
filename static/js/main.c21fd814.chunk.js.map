{"version":3,"sources":["components/header/sw-logo.png","services/swapi-service.js","components/header/header.js","components/spinner/spinner.js","components/film-details/film-details.js","components/film-list/film-list.js","components/search/search.js","components/app/app.js","index.js"],"names":["module","exports","SwapiService","_url","getAllFilms","a","getSource","films","results","anAsyncFunction","item","substring","length","res","getAllQuery","list","Promise","all","map","urlRoute","fetch","this","mode","promise","ok","Error","status","json","body","Header","className","src","logo","alt","Spinner","FilmDetails","film","toggleDetails","titlesProps","Object","keys","useState","filmProps","setFilmsProps","swapiService","useEffect","obj","k","details","detail","index","idRegExp","key","i","url","match","href","name","type","onClick","episode_id","ViewFilm","showDetails","setShowDetails","title","FilmList","visibleFilms","Search","setSearchQuery","searchQuery","query","setQuery","placeholder","value","onChange","event","target","preventDefault","App","state","filmList","isSort","setState","sort","prevState","then","prevProps","filteredFilms","filter","toLocaleLowerCase","includes","b","localeCompare","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c21fd814.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-logo.ec952e95.png\";","class SwapiService {\r\n\r\n    _url= 'https://swapi.co/api';\r\n\r\n    async getSource (urlRoute){\r\n        const promise = await fetch(`${this._url}${urlRoute}` , {\r\n            mode: \"cors\"\r\n        });\r\n\r\n        if(!promise.ok){\r\n            throw new Error(`Could not fetch ${urlRoute}, received ${promise.status}`)\r\n        }\r\n\r\n        const body = await promise.json();\r\n        return body\r\n    }\r\n\r\n    getAllFilms = async () => {\r\n        const films = await this.getSource('/films/');\r\n        return films.results;\r\n    };\r\n\r\n\r\n    anAsyncFunction = async item => {\r\n        item = item.substring(this._url.length, item.length);\r\n        const res = await this.getSource(item);\r\n        return res;\r\n    };\r\n\r\n    getAllQuery = async (list) => {\r\n        return Promise.all(list.map(item => this.anAsyncFunction(item)))\r\n    };\r\n}\r\n\r\nexport default SwapiService;","import React from 'react';\r\nimport logo from './sw-logo.png';\r\n\r\nconst Header = ()=>{\r\n\r\n    return (\r\n        <header className=\"App-header\">\r\n            <img className=\"logo\" src={logo} alt=\"\"/>\r\n\r\n        </header>\r\n    )\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=>{\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"loadingio-spinner-double-ring-q85b3h4fg4p\">\r\n                <div className=\"ldio-2r49py3qnqb\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Spinner;\r\n","import React, {useState,useEffect} from 'react';\r\nimport Spinner from '../spinner/spinner'\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nimport './film-details.css'\r\n\r\nconst FilmDetails = ({film, toggleDetails})=>{\r\n\r\n    const titlesProps = Object.keys(film);\r\n    const [filmProps, setFilmsProps] = useState(null);\r\n    const swapiService = new SwapiService();\r\n\r\n    useEffect(()=>{\r\n        async function fetch() {\r\n            const obj = {};\r\n            for (let k in film) {\r\n                if (typeof film[k] === 'object') {\r\n                    const res = await swapiService.getAllQuery(film[k]);\r\n                    obj[k] = res;\r\n                }\r\n            }\r\n            setFilmsProps(obj);\r\n        }\r\n        fetch();\r\n    },[]);\r\n\r\n    const details = filmProps?titlesProps.map((detail, index)=> {\r\n                    const idRegExp = /\\/([0-9]*)\\/$/;\r\n                if (typeof film[detail] === 'object') {\r\n\r\n                    return  <ul className=\"list-group\"\r\n                                key={index}\r\n                    >\r\n                        {detail}\r\n                        {film[detail].map((item, i) =>{\r\n\r\n                           const index = filmProps[detail][i].url.match(idRegExp)[1];\r\n\r\n                            return <li\r\n                                key={i}\r\n                                className=\"list-group-item\">\r\n                                <div className =\"hero\">\r\n                                    <img src={`https://starwars-visualguide.com/assets/img/${detail}/${index}.jpg`} alt=\"\"/>\r\n                                </div>\r\n\r\n                                <a href={item}>\r\n                                            <span>\r\n                                                {filmProps[detail][i].name}\r\n                                            </span>\r\n                                </a>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n\r\n                }\r\n                return<li className=\"list-group-item\"\r\n                          key={index}\r\n                >\r\n                    {detail}\r\n                    <p>\r\n                        {film[detail]}\r\n                    </p>\r\n                </li>\r\n            }):<Spinner/>;\r\n\r\n\r\n    return (\r\n        <div className=\"film-details\">\r\n\r\n            <div className=\"card text-white bg-secondary mb-3\" >\r\n                <div className=\"card-header\">\r\n                    <button type=\"button\"\r\n                            className=\"btn btn-primary btn-sm\"\r\n                            onClick={toggleDetails}\r\n                    >\r\n                        Hide Details\r\n                    </button>\r\n                </div>\r\n\r\n                <img src={`./img/ep-${film.episode_id}.jpg`} className=\"poster\" />\r\n\r\n                <div className=\"card-body\">\r\n\r\n                    <ul className=\"list-group\">\r\n                        {details}\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FilmDetails;","import React, {Fragment, useState} from 'react';\r\nimport FilmDetails from '../film-details/film-details'\r\nimport Spinner from '../spinner/spinner'\r\n\r\nconst FilmList = ({visibleFilms})=>{\r\n\r\n    const list = visibleFilms ? visibleFilms.map(film=>\r\n        <ViewFilm\r\n            key={film.episode_id}\r\n            film={film}\r\n        />\r\n    ): <Spinner/>;\r\n\r\n\r\n    return (\r\n        <div className=\"film-list\">\r\n\r\n            <ul className=\"list-group\">\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ViewFilm =({film})=>{\r\n\r\n    const [showDetails, setShowDetails] = useState(false);\r\n\r\n    const toggleDetails = () => {\r\n        setShowDetails(!showDetails)\r\n    };\r\n\r\n    const details = showDetails?\r\n\r\n        <FilmDetails\r\n            film={film}\r\n            toggleDetails={toggleDetails}\r\n        />\r\n        :<Fragment>\r\n                <span>\r\n                    {film.title}\r\n                </span>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-warning btn-sm\"\r\n                onClick={toggleDetails}\r\n            >\r\n                Show Details\r\n            </button>\r\n        </Fragment>;\r\n\r\n\r\n    return (\r\n        <li className =\"list-group-item\r\n                        d-flex\r\n                        justify-content-between\r\n                        align-items-center\"\r\n        >\r\n            {details}\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default FilmList;","import React, {useState} from 'react';\r\nimport './search.css'\r\n\r\nconst Search = ({setSearchQuery, searchQuery}) => {\r\n\r\n    const [query, setQuery] = useState(searchQuery);\r\n\r\n    const setNewQuery = (event) => {\r\n        const query = event.target.value;\r\n        setQuery(query);\r\n    };\r\n\r\n    const sendQuery = (event) => {\r\n        event.preventDefault();\r\n        setSearchQuery(query);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search\">\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input\r\n                            className=\"form-control mr-sm-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={query}\r\n                            onChange={setNewQuery}\r\n                        />\r\n                            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\"\r\n                                    onClick={sendQuery}\r\n                            >Search</button>\r\n                    </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport Header from '../header/header';\nimport FilmList from '../film-list/film-list';\nimport Search from '../search/search';\nimport './app.css';\n\nclass App extends React.Component{\n\n      swapiService = new SwapiService();\n\n      state = {\n          searchQuery: '',\n          filmList: null,\n          visibleFilms: null,\n          isSort: false\n      };\n\n  setSearchQuery = (searchQuery) => {\n      this.setState({searchQuery});\n  };\n\n  sort = () => {\n      this.setState(prevState=>({isSort: !prevState.isSort}));\n  };\n\n  componentDidMount(){\n      this.swapiService.getAllFilms()\n          .then(filmList=>\n              this.setState({\n                  filmList,\n                  visibleFilms: filmList\n              })\n          );\n  }\n\n  componentDidUpdate(prevProps, prevState){\n      const {searchQuery, filmList, isSort} = this.state;\n\n      if(prevState.searchQuery !== searchQuery || prevState.isSort !== isSort) {\n\n          const filteredFilms = filmList.filter(film=>film.title.toLocaleLowerCase().includes(searchQuery.toLocaleLowerCase()));\n          if(isSort) {\n              const visibleFilms = [...filteredFilms].sort((a, b)=>a.title.localeCompare(b.title));\n              this.setState({visibleFilms})\n          }\n          if(!isSort) {\n              const visibleFilms = [...filteredFilms].sort((a, b)=>b.title.localeCompare(a.title));\n              this.setState({visibleFilms})\n          }\n      }\n  }\n  render(){\n      const {visibleFilms, searchQuery} = this.state;\n\n      return (\n          <div className=\"App\">\n              <Header/>\n\n              <Search\n                  setSearchQuery={this.setSearchQuery}\n                  searchQuery={searchQuery}\n              />\n              <div className=\"sort\">\n                  <button\n                      type=\"button\"\n                      className=\"btn btn-primary\"\n                      onClick={this.sort}\n                  >\n                      Sort by title\n                  </button>\n              </div>\n              <FilmList visibleFilms={visibleFilms}/>\n          </div>\n      );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}